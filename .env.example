# PyClarity Environment Configuration Example
# Copy this file to .env and fill in your actual values

# Database Configuration
DATABASE_URL=postgresql://pyclarity:pyclarity@localhost:5432/pyclarity

# LLM Provider Configuration
# Uncomment and configure the provider(s) you want to use

# OpenAI Configuration (or OpenAI-compatible APIs)
# OPENAI_API_KEY=your-openai-api-key-here
# OPENAI_MODEL=gpt-4  # or gpt-3.5-turbo, gpt-4-turbo, etc.
# OPENAI_BASE_URL=https://api.openai.com/v1  # Optional: custom base URL for OpenAI-compatible APIs
# Examples of OpenAI-compatible services:
#   - Together AI: https://api.together.xyz/v1
#   - Anyscale: https://api.endpoints.anyscale.com/v1
#   - OpenRouter: https://openrouter.ai/api/v1
#   - Groq: https://api.groq.com/openai/v1
#   - Local vLLM: http://localhost:8000/v1

# Anthropic Configuration
# ANTHROPIC_API_KEY=your-anthropic-api-key-here
# ANTHROPIC_MODEL=claude-3-sonnet-20240229  # or claude-3-opus-20240229, claude-3-haiku-20240307
# ANTHROPIC_BASE_URL=https://api.anthropic.com  # Optional: custom base URL

# Local LLM Configuration (Ollama, LM Studio, etc.)
# LOCAL_LLM_BASE_URL=http://localhost:11434
# LOCAL_LLM_MODEL=llama2  # or codellama, mistral, etc.

# Schema Generation Configuration
ENABLE_SCHEMA_GENERATION=true  # Set to false to disable automatic schema generation
SCHEMA_GENERATION_EXAMPLES=3   # Number of examples to generate per schema

# Vector Embedding Configuration (for similarity search)
# EMBEDDING_MODEL=text-embedding-ada-002  # OpenAI embedding model
# EMBEDDING_DIMENSION=1536  # Dimension of embeddings (1536 for OpenAI)

# Logging Configuration
LOG_LEVEL=INFO  # DEBUG, INFO, WARNING, ERROR, CRITICAL